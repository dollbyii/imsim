#################################################################################
#         TUTORIEL SIMULATEUR D'IMAGES ET CALCULATEUR DE TEMPS DE POSE          #
#################################################################################
Version : 1.0.0
Date : 06/08/2022
Auteur : Loic Eymar
=================================================================================

Ce document décrit la méthode d'estimation du temps d'exposition, de la magnitude limite et du SNR utilisé dans
le programme ImSim.

La méthode initiale s'appuie sur les scripts etc_tools développé par Alain Klotz pour le logiciel Audela.

La méthode de calculte a été complété pour intégré de nouvelle fonctionnalitée :
 - prise en compte du bining en CMOS

1. THEORIE DE LA GENERATION DES SIGNAUX ET DES BRUITS DANS UN PIXEL DE CAMERA NUMERIQUE
=========================================================================================
1.1 INPUTS PARAMETERS
----------------------
    1.1.1 OBJECT
    -------------
M : Absolute stellar magnitude
DL_Mpc : Distance luminosity (Mpc)
m : Apparent stellar magnitude
Band : Photometric Band (B, V, R, I or C)

    1.1.2. FILTER
    --------------
l : Central wavelength of the photometric band (µm)
Dl : Bandpass width of the photometric band (µm)
Fm0 : Flux at magnitude zero of the photometric band (Jy)

Band	I	DL/I	Flux at m=0	Ref
	µm	µm	Jy
U	0.36	0.15	1810	Bessel (1979)
B	0.44	0.22	4260	Bessel (1979)
V	0.55	0.16	3640	Bessel (1979)
R	0.64	0.23	3080	Bessel (1979)
I	0.79	0.19	2550	Bessel (1979)
J	1.26	0.16	1600	Campins, Reike, & Lebovsky (1985)
H	1.60	0.23	1080	Campins, Reike, & Lebovsky (1985)
K	2.22	0.23	670	Campins, Reike, & Lebovsky (1985)
g	0.52	0.14	3730	Schneider, Gunn, & Hoessel (1983)
r	0.67	0.14	4490	Schneider, Gunn, & Hoessel (1983)
i	0.79	0.16	4760	Schneider, Gunn, & Hoessel (1983)
z	0.91	0.13	4810	Schneider, Gunn, & Hoessel (1983)

For C band (clear) in visible spectrum, we can take :
l = 0.6 µm, Dl : 0.3 µm, Fm0 = 3100 Jy

    1.1.3. LOCAL CONDITIONS
    ------------------------
E : Elevation above horizon (deg)
Tatm0 : Transmission of the atmosphere in the photometric band
seeing : Fwhm of the seeing (arcsec)
msky : Sky brightness in the photometric band (mag/arcsec2)

Lunar Age    	U	B	V	R	I
(days)
0	22.0	22.7	21.8	20.9	19.9
3	21.5	22.4	21.7	20.8	19.9
7	19.9	21.6	21.4	20.6	19.7
10	18.5	20.7	20.7	20.3	19.5
14	17.0	19.5	20.0	19.9	19.2

    1.1.4. OPTICS
    --------------
  D : Optic diameter (m)
F/D : Focal diameter ratio
Topt : Transmission of the optics in the photometric band (Reflec=0.8, Refrac=0.95)
Fwhm_psf_opt : Fwhm of the point spread function in the image plane (m)

    1.1.5. CCD
    -----------
naxis1 : Number of pixels on axis1
cellsize1 : Photocell size on axis1 (m)
bin1 : Binning on axis1 (photocells/pixel)
naxis2 : Number of pixels on axis2
cellsize2 : Photocell size on axis2 (m)
bin2 : Binning on axis2 (photocells/pixel)
h : CCD Quantum efficiency at l (electron/photon)
N_ro : Readout noise (electrons)
C_th : Thermic coefficient (electrons/sec/photocell)
G : CCD gain (electrons/ADU)
Em : Electron multiplier (>1 if EMCCD, else =1)
t : Exposure time (sec)

1.2. PRELIMINARY CALCULATIONS
------------------------------
    1.2.1. OPTICS FOCAL LENGTH (M) :
    ---------------------------------
    Foclen = (F/D) * D
Pixels as result of binning of photocells on axis 1 (m) :
    pixsize1 = cellsize1 * Bin1
Pixels as result of binning of photocells on axis 2 (m) :
    pixsize2 = cellsize2 * Bin2
Pixel spatial sampling on axis1 (arcsec/pix) :
    cdelt1 = 2 * atan ( pixsize1 / Foclen / 2) * 180 / pi * 3600
Pixel spatial sampling on axis2 (arcsec/pix) :
    cdelt2 = 2 * atan ( pixsize2 / Foclen / 2) * 180 / pi * 3600
Pixel solid angle (arcsec2/pix) :
    W = cdelt1 * cdelt2
Field of view of the axis1 CCD image (deg) :
    FoV1 = 2 * atan ( naxis1 * cellsize1 / foclen / 2) * 180 / pi * 3600
Field of view of the axis2 CCD image (deg) :
    FoV2 = 2 * atan ( naxis2 * cellsize2 / foclen / 2) * 180 / pi * 3600
Fwhm of the seeing in the image plane (m) :
    Fwhm_psf_seeing = seeing / 3600 * pi / 180 * Foclen
Fwhm of the PSF in the image plane (m) :
    Fwhm_psf = sqrt ( Fwhm_psf_opt^2 + Fwhm_psf_seeing^2 )
Flux fraction in the brightest pixel in any case (numerical algorithm) for the best case (max flux at the center of the pixel). For the worst case (max flux at the corner of the pixel), take x1=0 and y1=0 :
    oversampling = 20; (must be even >10)
    sigma = Fwhm_psf / (2*sqrt(2*log(2)));
    sigma2=sigma*sigma;
    a1d=1 / sigma / sqrt(2*p);
    a2d=a1d*a1d;
    if (pixsize1>=pixsize2)
        p=pixsize2;
        P=pixsize1;
    else
        p=pixsize1;
        P=pixsize2;
    end
    dp=p/oversampling;
    som=0;
    x1=-p/2;
    y1=-P/2;
    for x=x1:dp:x1+p
        dx2=x*x;
        for y=y1:dp:y1+P
            dy2=y*y;
            d2=dy2+dx2;
            som=som+exp(-0.5*d2/sigma2);
        end
    end
    fpix=som*a2d*dp*dp;

    1.2.2. OBJECT
    --------------
Apparent magnitude knowing absolute magnitude and distance :
    m = M + 5 * log10 (DL_Mpc * 1e6 / 10)
Total flux of the object outside atmosphere (Jy) :
    F_Jy = Fm0 * 10 ^ ( -0.4 * m )
Total flux of the object outside atmosphere (photons / sec /m2) :
    F_ph = F_Jy * 1.51e7 * Dl/l
Transmission of the atmosphere at elevation :
    Tatm = Tatm0 * sin(E)
Total flux of the object after passed thru the optics (photons / object) :
    Ftot_ph = F_ph * p * D^2 / 4 * Tatm * Topt * t
Total flux of the object after passed thru the optics (electrons / object) :
    Ftot_el = Ftot_ph * h
Brightest pixel flux of the object after passed thru the optics (electrons / pixel) :
    Fpix_el = Ftot_el * fpix

    1.2.3. SKY BRIGHTNESS
    ----------------------
Brightness of the sky (Jy/arsec2) :
    Sky_Jy = Fm0 * 10 ^ ( -0.4 * msky )
Brightness of the sky (photons / sec /m2) :
    Sky_ph = Sky_Jy * 1.51e7 * Dl/l
Brightness of the sky after passed thru the optics (photons / pixel) :
    Skypix_ph = Sky_ph * p * D^2 / 4 * W * Topt * t
Brightness of the sky after passed thru the optics (electrons / pixel) :
    Skypix_el = Skytot_ph * h

    1.2.4. CCD
    -----------
EMCCD excess noise factor (empirical formula derived from a figure of a paper) :
    fex = 1 + ( 2/pi * atan( (Em-1)*3 ) )^3

1.3. SIGNALS AND NOISES
------------------------
All expressions are in (electrons/pixel). In order to convert into (ADUs/pixel) divide them by G.
Thermic signal (electrons/pixel) :
    S_th = C_th * Bin1 * Bin2 * t * Em
Sky signal (electrons/pixel) :
    S_sk = Skypix_el * Em
Object signal (electrons/pixel) :
    S_ph = Fpix_el * Em
Thermic noise (electrons/pixel) :
    N_th = sqrt(C_th * Bin1 * Bin2 * t * fex) * Em
Sky noise (electrons/pixel) :
    N_sk = sqrt(Skypix_el * fex) * Em
Object noise (electrons/pixel) = shot noise :
    N_ph = sqrt(Fpix_el * fex) * Em
Equivalent read noise :
    for CCD sensor :
        N_ro_e=N_ro
    for CMOS sensor
        N_ro_e=N_ro * Bin1 * Bin2
Total noise (electrons/pixels) :
    N_tot = sqrt ( N_ro_e^2 + N_th^2 + N_sk^2 + N_ph^2 )
Object signal/noise at the brightest pixel :
    SNR_obj = S_ph / N_tot

1.4. SEARCHING FOR AN EXPOSURE TIME GIVEN A SIGNAL/NOISE AND A MAGNITUDE
-------------------------------------------------------------------------
We want to find the t value knowing the SNR_obj (and knowing the magnitude of the object).
We start with the SNR formula :
    (SNR_obj)^2 * N_tot^2 = S_ph^2
We express all noise sources :
    (SNR_obj)^2 * ( N_ro_e^2 + N_th^2 + N_sk^2 + N_ph^2 ) = S_ph^2
We develop all parameters extracting time :
    N_th^2 = C_th * Bin1 * Bin2 * fex * Em^2 * t
    N_sk^2 = Skypix_el * fex * Em^2 = (Sky_ph * p * D^2 / 4 * W * Topt * h * fex * Em^2) * t
    N_ph^2 = Fpix_el * fex * Em^2 = (F_ph * p * D^2 / 4 * Tatm * Topt * h * fpix * fex * Em^2) * t
    S_ph^2 = (Fpix_el * Em)^2 = (F_ph * p * D^2 / 4 * Tatm * Topt * h * fpix * Em)^2 * t^2
We obtain the equation C + B*t = -A*t^2 where we see :
    C = (SNR_obj)^2 * ( N_ro_e^2)
    B = (SNR_obj)^2 * [ (C_th * Bin1 * Bin2 * fex * Em^2) + (Sky_ph * p * D^2 / 4 * W * Topt * h * fex * Em^2) + (F_ph * p * D^2 / 4 * Tatm * Topt * h * fpix * fex * Em^2) ]
    A = - (F_ph * p * D^2 / 4 * Tatm * Topt * h * fpix * Em)^2
We have A<0, B>0 and C >0. From the equation A*t^2 + B*t + C = 0, we can find the t value :
    D = B*B - 4*A*C (always positive)
    t = ( -B - sqrt(D) ) / (2*A)

1.5. SEARCHING FOR A MAGNITUDE GIVEN AN EXPOSURE TIME AND A SIGNAL/NOISE
-------------------------------------------------------------------------
We want to find the m value knowing the SNR_obj (and knowing the exposure time of the object).
We start with the SNR formula :
    (SNR_obj)^2 * N_tot^2 = S_ph^2
We express all noise sources :
    (SNR_obj)^2 * ( N_ro_e^2 + N_th^2 + N_sk^2 + N_ph^2 ) = S_ph^2
We develop all parameters extracting time :
    N_th^2 = C_th * Bin1 * Bin2 * fex * Em^2 * t
    N_sk^2 = Skypix_el * fex * Em^2 = (Sky_ph * p * D^2 / 4 * W * Topt * h * fex * Em^2 * t)
    N_ph^2 = Fpix_el * fex * Em^2 = F_ph * (p * D^2 / 4 * Tatm * Topt * h * fpix * fex * Em^2 * t)
    S_ph^2 = (Fpix_el * Em)^2 = F_ph^2 * (p * D^2 / 4 * Tatm * Topt * h * fpix * Em * t)^2
We obtain the equation C + B*F_ph = -A*F_ph^2 where we see :
    C = (SNR_obj)^2 * [( N_ro_e^2) + (C_th * Bin1 * Bin2 * fex * Em^2 * t) + (Sky_ph * p * D^2 / 4 * W * Topt * h * fex * Em^2 * t)]
    B = (SNR_obj)^2 * (p * D^2 / 4 * Tatm * Topt * h * fpix * fex * Em^2 *t)
    A = - (p * D^2 / 4 * Tatm * Topt * h * fpix * Em * t)^2
We have A<0, B>0 and C >0. From the equation A*t^2 + B*t + C = 0, we can find the t value :
    D = B*B - 4*A*C (always positive)
Total flux of the object outside atmosphere (photons / sec /m2) :
    F_ph = ( -B - sqrt(D) ) / (2*A)
Total flux of the object outside atmosphere (Jy) :
    F_Jy = F_ph / (1.51e7 * Dl/l)
The magnitude :
    m = -2.5 *log10 ( F_Jy/Fm0 )
